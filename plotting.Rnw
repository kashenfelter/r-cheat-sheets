\documentclass[twocolumn, DIV24,a4paper,BCOR0mm]{scrartcl}
% \usepackage{kpfonts}
\usepackage{hyperref}
\usepackage[T1]{fontenc}

%Space around sections
\usepackage[compact]{titlesec}
\titlespacing{\section}{0pt}{2ex}{1ex}
\titlespacing{\subsection}{0pt}{1ex}{0ex}
\titlespacing{\subsubsection}{0pt}{-0.5ex}{-0.5ex}

%Paragraph spacing
\setlength{\parskip}{0cm}
\setlength{\parindent}{1em}

\linespread{0.9}
\usepackage{scrpage2}

\pagestyle{scrheadings}  
\setheadsepline{.4pt}
\ihead[]{Plotting cheat sheet}
\chead[]{}
\ohead[]{}
\ifoot[]{\textit{Dr Colin Gillespie - colin.gillespie@newcastle.ac.uk}}
\cfoot[]{}
\ofoot[]{\url{https://github.com/csgillespie/r-cheat-sheets}}
<<setup, include=FALSE, cache=FALSE>>=
#options(replace.assign=TRUE,width=60)
opts_chunk$set(fig.path='figure/graphics-', cache.path='cache/graphics-', fig.align='center', fig.height=3)
#, dev='tikz', fig.width=5, fig.height=5, fig.show='hold', cache=TRUE, par=TRUE)
knit_hooks$set(crop=hook_pdfcrop)
  #par=function(before, options, envir){
#if (before && options$fig.show!='none') par(mar=c(4,4,.1,.1),cex.lab=.95,cex#.axis=.9,mgp=c(2,.7,0),tcl=-.3)
#}, crop=hook_pdfcrop)

@


\begin{document}
<<echo=FALSE>>=
ev = FALSE
@

\textsc{Work in progress}
\subsubsection*{Plotting}

<<eval=ev>>=
plot(x) # Basic scatter plot
plot(x, y) #Plot of x and y
hist(x) # Histogram
barplot(x) #Bar chart
boxplot(x) #Box and whiskers plot
pie(x) # Pie chart
@

\subsubsection*{Standard plot arguments}

<<eval=FALSE>>=
xlab = "x-axis label" #See also ylab
xlim = c(0, 10)#x axis range
main = "Main title"
sub = "sub title"
lwd = 2 #Line width
col = "red" #Line colour, or
col = 2 
@


\subsubsection*{Graphical parameters}

These can be set globally with \texttt{par(...)}; many can be passed as parameters to plotting commands.
\begin{itemize}
\item \texttt{adj} controls text justification: 0 left-justified, 0.5 centred, 1 right-justified.
\item \texttt{bg} specifies the colour of the background, e.g. \texttt{bg="red"} or \texttt{bg="blue"}. See \texttt{colors()} for a list of the 657 available colours. 
\item \texttt{bty} controls the type of box drawn around the plot, allowed values are: "o", "l", "7", "c", "u" ou "]" (the box looks like the corresponding character); if \texttt{bty="n"} the box is not drawn
\item \texttt{cex} a value controlling the size of texts and symbols with respect to the default. Related options are: \texttt{cex.axis}, \texttt{cex.lab}, \texttt{cex.main} and \texttt{cex.sub}.
\item \texttt{col} controls the color of symbols and lines; use color names: "red", "blue" see \texttt{colors()} or as "\#RRGGBB"; see rgb(), hsv(), gray(), and rainbow(); as for cex there are: col.axis, col.lab, col.main, col.sub
\item \texttt{font}: an integer which controls the style of text (1: normal, 2: italics, 3:bold, 4: bold italics); as for \texttt{cex} there are: \texttt{font.axis}, \texttt{font.lab}, \texttt{font.main}, \texttt{font.sub}
\item \texttt{las}: an integer which controls the orientation of the axis labels (0: parallel to the axes, 1: horizontal, 2: perpendicular to the axes, 3: vertical)
\end{itemize}
\newpage

<<echo=FALSE,fig.cap="R pch symbols",crop=TRUE, out.width='0.9\\linewidth',>>=
x = rep(1:13, 2)[1:26]
y = rep(1:2, each=13)[1:26]
plot(x, y, pch=0:25, bty="n", axes=FALSE, ylim=c(0.5,2.5), xlim=c(1, 13.5),
     xlab="", ylab="", cex=2)
text(x+0.3, y + 0.3, 0:25, cex=0.8)
@

<<echo=FALSE,fig.cap="The six standard R line types.",crop=TRUE, out.width='0.9\\linewidth',>>=
plot(0:1, 0:1, type="n", axes=FALSE, cex=2, xlab="", ylab="", ylim=c(0, 1.1))
y = seq(0,1,length.out=6)
segments(0.05, y, 1, y, lty=6:1, lwd=3)
text(0, y, 1:6, cex=0.8)

@

<<echo=FALSE,fig.cap="The eight standard colours.",crop=TRUE, out.width='0.9\\linewidth',>>=
plot(0:1, 0:1,  type="n", axes=FALSE, cex=2, xlab="", ylab="", xlim=c(-0.2, 1.1))
x = seq(0,1,length.out=8)
epsilon = 0.05
for(i in 1:8) 
  polygon(c(x[i]+epsilon,  x[i]+epsilon, x[i]-epsilon, x[i]-epsilon), c(0.2,0.7,0.7,0.2), col=i)

text(x, 0.8, 1:8)
text(x, 0.05, palette(), cex=0.8)
@





<<echo=FALSE, out.width='0.9\\linewidth',crop=TRUE>>=
# x = rep(rep(c(0,0, 1, 1), 26) + rep(0:25, each=4), 26)
# y = rep(rep(c(0,1, 1, 0), 26), 26) + rep(0:25, each=4*26)

x = rep(rep(c(0,0, 1, 1), 16) + rep(0:15, each=4), 42)
y = rep(rep(c(0,2, 2, 0), 16), 42) + 2*rep(0:41, each=4*16)

x = rep(rep(c(0,0, 1, 1), 10) + rep(0:9, each=4), 66)
y = rep(rep(c(0,2, 2, 0), 10), 66) + 2*rep(0:65, each=4*10)


x = matrix(x, ncol=4, byrow=TRUE)
y = matrix(y, ncol=4, byrow=TRUE)
z = as.data.frame(cbind(x, y))[1:length(colours()),]
z$colours = colours()
par(mar=c(0,0,0,0),  mgp=c(0,0,0))
plot(0, 0, xlim=c(0, 16), ylim=c(0,2*66), type="n", axes=FALSE, asp=0.15)
sink =apply(z, 1, 
            function(i) polygon(i[1:4], i[5:8], col=i[9], 
                                border="white", lwd=0.5))
k = seq(2, nrow(z), 2)
#text(z[k, 1]+0.5, z[k, 5]+0.5, labels=k, cex=0.5)  
for(i in seq(2, nrow(z),2)) {
  k = i
  if((i-1) %% 20 < 11) k = i - 1
  text(z[k, 1]+0.5, z[k, 5]+1, labels=k, cex=0.2)  
}
@










































\end{document}